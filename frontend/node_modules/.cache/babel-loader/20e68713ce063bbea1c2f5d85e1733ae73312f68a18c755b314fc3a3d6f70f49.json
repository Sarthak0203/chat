{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/UserContextProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserContextProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false); // Set loading to false after user is loaded\n  }, []);\n  useEffect(() => {\n    if (!loading) {\n      // Only save user to local storage if not loading\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n      } else {\n        localStorage.removeItem('user');\n      }\n    }\n  }, [user, loading]); // Add loading to dependency array\n\n  const contextValue = {\n    user,\n    setUser\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(UserContextProvider, \"Ui6DLq5vMU2GgsRY6PPBrtV3hI8=\");\n_c = UserContextProvider;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","useState","createContext","useEffect","jsxDEV","_jsxDEV","UserContext","UserContextProvider","children","_s","user","setUser","loading","setLoading","storedUser","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/UserContextProvider.js"],"sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nexport const UserContext = createContext();\n\nexport const UserContextProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false); // Set loading to false after user is loaded\n  }, []);\n\n  useEffect(() => {\n    if (!loading) { // Only save user to local storage if not loading\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n      } else {\n        localStorage.removeItem('user');\n      }\n    }\n  }, [user, loading]); // Add loading to dependency array\n\n  const contextValue = {\n    user,\n    setUser,\n  };\n\n  return (\n    <UserContext.Provider value={contextValue}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMK,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CE,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACdH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACjC;IACAD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,OAAO,EAAE;MAAE;MACd,IAAIF,IAAI,EAAE;QACRK,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACV,IAAI,CAAC,CAAC;MACpD,CAAC,MAAM;QACLK,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;EACF,CAAC,EAAE,CAACX,IAAI,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;;EAErB,MAAMU,YAAY,GAAG;IACnBZ,IAAI;IACJC;EACF,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAd,QAAA,EACvCA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CAhCWF,mBAAmB;AAAAsB,EAAA,GAAnBtB,mBAAmB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}