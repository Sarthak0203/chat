{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/VideoCall/VideoCall.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoChat = () => {\n  _s();\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const [signalingServer, setSignalingServer] = useState(null);\n  const [remoteUserId, setRemoteUserId] = useState(null); // You need to set this ID appropriately\n  let peerConnection;\n  const [isPeerConnectionReady, setIsPeerConnectionReady] = useState(false);\n  useEffect(() => {\n    // Initialize the signaling server\n    const server = io('http://localhost:9000');\n    setSignalingServer(server);\n    server.on('video-offer', async message => {\n      await answerCall(message.offer, message.source);\n    });\n\n    // More server event listeners here...\n\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localVideoRef.current.srcObject = stream;\n      peerConnection = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }]\n      });\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n      peerConnection.onicecandidate = event => {\n        if (event.candidate) {\n          server.emit('new-ice-candidate', {\n            candidate: event.candidate,\n            target: remoteUserId\n          });\n        }\n      };\n      peerConnection.ontrack = event => {\n        remoteVideoRef.current.srcObject = event.streams[0];\n      };\n\n      // Set isPeerConnectionReady to true after peerConnection has been initialized\n      setIsPeerConnectionReady(true);\n    });\n  }, []);\n  const startCall = async () => {\n    if (!peerConnection) {\n      console.log('Peer connection is not established yet');\n      return;\n    }\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n\n    // Send the offer to the other peer via your signaling server\n    signalingServer.send({\n      type: 'video-offer',\n      target: remoteUserId,\n      // The ID of the other user\n      offer: offer\n    });\n  };\n  const answerCall = async (offer, source) => {\n    await peerConnection.setRemoteDescription(offer);\n    const answer = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answer);\n\n    // Send the answer back to the caller via your signaling server\n    signalingServer.send({\n      type: 'video-answer',\n      target: source,\n      // The ID of the other user\n      answer: answer\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: localVideoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: remoteVideoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCall,\n      disabled: !isPeerConnectionReady,\n      children: \"Start Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoChat, \"g4R9HA3FUDxnapdKlE/PHBiSbvQ=\");\n_c = VideoChat;\nexport default VideoChat;\nvar _c;\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","VideoChat","_s","localVideoRef","remoteVideoRef","signalingServer","setSignalingServer","remoteUserId","setRemoteUserId","peerConnection","isPeerConnectionReady","setIsPeerConnectionReady","server","on","message","answerCall","offer","source","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","RTCPeerConnection","iceServers","urls","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","emit","target","ontrack","streams","startCall","console","log","createOffer","setLocalDescription","send","type","setRemoteDescription","answer","createAnswer","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/VideoCall/VideoCall.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst VideoChat = () => {\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const [signalingServer, setSignalingServer] = useState(null);\n  const [remoteUserId, setRemoteUserId] = useState(null); // You need to set this ID appropriately\n  let peerConnection;\n  const [isPeerConnectionReady, setIsPeerConnectionReady] = useState(false);\n\n  useEffect(() => {\n    // Initialize the signaling server\n    const server = io('http://localhost:9000');\n    setSignalingServer(server);\n  \n    server.on('video-offer', async (message) => {\n      await answerCall(message.offer, message.source);\n    });\n  \n    // More server event listeners here...\n  \n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        localVideoRef.current.srcObject = stream;\n  \n        peerConnection = new RTCPeerConnection({\n          iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n        });\n  \n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n  \n        peerConnection.onicecandidate = event => {\n          if (event.candidate) {\n            server.emit('new-ice-candidate', {\n              candidate: event.candidate,\n              target: remoteUserId\n            });\n          }\n        };\n  \n        peerConnection.ontrack = event => {\n          remoteVideoRef.current.srcObject = event.streams[0];\n        };\n  \n        // Set isPeerConnectionReady to true after peerConnection has been initialized\n        setIsPeerConnectionReady(true);\n      });\n  }, []);\n\n  const startCall = async () => {\n    if (!peerConnection) {\n      console.log('Peer connection is not established yet');\n      return;\n    }\n  \n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n  \n    // Send the offer to the other peer via your signaling server\n    signalingServer.send({\n      type: 'video-offer',\n      target: remoteUserId, // The ID of the other user\n      offer: offer\n    });\n  };\n  \n  const answerCall = async (offer, source) => {\n    await peerConnection.setRemoteDescription(offer);\n    const answer = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answer);\n  \n    // Send the answer back to the caller via your signaling server\n    signalingServer.send({\n      type: 'video-answer',\n      target: source, // The ID of the other user\n      answer: answer\n    });\n  };\n\n  return (\n    <div>\n      <video ref={localVideoRef} autoPlay muted />\n      <video ref={remoteVideoRef} autoPlay />\n      <button onClick={startCall} disabled={!isPeerConnectionReady}>Start Call</button>\n    </div>\n  );\n};\n\nexport default VideoChat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}