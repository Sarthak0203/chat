{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/VideoCall/VideoCall.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoChat = () => {\n  _s();\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const signalingServer = useRef(null);\n  const [remoteUserId, setRemoteUserId] = useState(null);\n  const [isPeerConnectionReady, setIsPeerConnectionReady] = useState(false);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [caller, setCaller] = useState(null);\n  const [callerSignal, setCallerSignal] = useState(null);\n  useEffect(() => {\n    console.log('Incoming call state: ', incomingCall);\n  }, [incomingCall]);\n  useEffect(() => {\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    setPeerConnection(pc);\n  }, []);\n  useEffect(() => {\n    signalingServer.current = io('http://localhost:7500');\n    signalingServer.current.on('connect', () => {\n      console.log('Connected to signaling server');\n    });\n    signalingServer.current.on('video-offer', async message => {\n      console.log('Received video-offer', message);\n      setIncomingCall(true);\n      setCaller(message.source);\n      setCallerSignal(message.offer);\n    });\n    signalingServer.current.on('user-connected', id => {\n      console.log('User connected', id);\n      setRemoteUserId(id);\n    });\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localVideoRef.current.srcObject = stream;\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n      peerConnection.onicecandidate = event => {\n        console.log('ICE candidate', remoteUserId);\n        signalingServer.current.emit('new-ice-candidate', {\n          candidate: event.candidate,\n          target: remoteUserId\n        });\n      };\n      peerConnection.ontrack = event => {\n        remoteVideoRef.current.srcObject = event.streams[0];\n      };\n      setIsPeerConnectionReady(true);\n    }).catch(error => {\n      console.error(\"Error accessing media devices.\", error);\n    });\n  }, [peerConnection]);\n  const startCall = async () => {\n    if (!peerConnection) {\n      console.log('Peer connection is not established yet');\n      return;\n    }\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    signalingServer.current.emit('offer', {\n      type: 'video-offer',\n      target: remoteUserId,\n      offer: offer\n    });\n    console.log('Emitted offer');\n  };\n  const answerCall = async () => {\n    setIncomingCall(false);\n    await peerConnection.setRemoteDescription(new RTCSessionDescription(callerSignal));\n    const sdp = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(sdp);\n    signalingServer.current.emit('answer', {\n      type: 'video-answer',\n      target: caller,\n      answer: sdp\n    });\n  };\n  const declineCall = () => {\n    setIncomingCall(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: localVideoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: remoteVideoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCall,\n      disabled: !isPeerConnectionReady,\n      children: \"Start Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), incomingCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Incoming Call...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: answerCall,\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: declineCall,\n        children: \"Decline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoChat, \"umAIePjrVTN/tS11+2GYa2T6Wos=\");\n_c = VideoChat;\nexport default VideoChat;\nvar _c;\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","VideoChat","_s","localVideoRef","remoteVideoRef","signalingServer","remoteUserId","setRemoteUserId","isPeerConnectionReady","setIsPeerConnectionReady","peerConnection","setPeerConnection","incomingCall","setIncomingCall","caller","setCaller","callerSignal","setCallerSignal","console","log","pc","RTCPeerConnection","iceServers","urls","current","on","message","source","offer","id","navigator","mediaDevices","getUserMedia","video","audio","then","stream","srcObject","getTracks","forEach","track","addTrack","onicecandidate","event","emit","candidate","target","ontrack","streams","catch","error","startCall","createOffer","setLocalDescription","type","answerCall","setRemoteDescription","RTCSessionDescription","sdp","createAnswer","answer","declineCall","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/VideoCall/VideoCall.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst VideoChat = () => {\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const signalingServer = useRef(null);\n  const [remoteUserId, setRemoteUserId] = useState(null);\n  const [isPeerConnectionReady, setIsPeerConnectionReady] = useState(false);\n\n  const [peerConnection, setPeerConnection] = useState(null);\n\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [caller, setCaller] = useState(null);\n  const [callerSignal, setCallerSignal] = useState(null);\n\n  useEffect(() => {\n    console.log('Incoming call state: ', incomingCall);\n  }, [incomingCall]);\n\n  useEffect(() => {\n    const pc = new RTCPeerConnection({\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n    });\n\n    setPeerConnection(pc);\n  }, []);\n\n  useEffect(() => {\n    signalingServer.current = io('http://localhost:7500');\n\n    signalingServer.current.on('connect', () => {\n      console.log('Connected to signaling server');\n    });\n\n    signalingServer.current.on('video-offer', async (message) => {\n      console.log('Received video-offer', message);\n      setIncomingCall(true);\n      setCaller(message.source);\n      setCallerSignal(message.offer);\n    });\n\n    signalingServer.current.on('user-connected', (id) => {\n      console.log('User connected', id);\n      setRemoteUserId(id);\n    });\n\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        localVideoRef.current.srcObject = stream;\n\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n\n        peerConnection.onicecandidate = event => {\n          console.log('ICE candidate', remoteUserId)\n          signalingServer.current.emit('new-ice-candidate', {\n            candidate: event.candidate,\n            target: remoteUserId\n          });\n        };\n\n        peerConnection.ontrack = event => {\n          remoteVideoRef.current.srcObject = event.streams[0];\n        };\n\n        setIsPeerConnectionReady(true);\n      }).catch(error => {\n        console.error(\"Error accessing media devices.\", error);\n      });\n  }, [peerConnection]);\n\n  const startCall = async () => {\n    if (!peerConnection) {\n      console.log('Peer connection is not established yet');\n      return;\n    }\n\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n\n    signalingServer.current.emit('offer', {\n      type: 'video-offer',\n      target: remoteUserId,\n      offer: offer\n    });\n    console.log('Emitted offer');\n  };\n\n  const answerCall = async () => {\n    setIncomingCall(false);\n    await peerConnection.setRemoteDescription(new RTCSessionDescription(callerSignal));\n    const sdp = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(sdp);\n    signalingServer.current.emit('answer', {\n      type: 'video-answer',\n      target: caller,\n      answer: sdp\n    });\n  };\n\n  const declineCall = () => {\n    setIncomingCall(false);\n  };\n\n  return (\n    <div>\n      <video ref={localVideoRef} autoPlay muted />\n      <video ref={remoteVideoRef} autoPlay />\n      <button onClick={startCall} disabled={!isPeerConnectionReady}>Start Call</button>\n      {incomingCall && (\n        <div>\n          <h1>Incoming Call...</h1>\n          <button onClick={answerCall}>Answer</button>\n          <button onClick={declineCall}>Decline</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoChat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}