{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/ChatPage/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext } from \"react\";\nimport io from \"socket.io-client\";\nimport arrow from \"../../assets/arrow.png\";\nimport logo from \"../../assets/logo.png\";\nimport \"./ChatPage.css\";\nimport ping from \"../../assets/ping.mp3\";\nimport { UserContext } from \"../../UserContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  useEffect(() => {\n    // Fetch user data from your server or local storage\n    const fetchUser = async () => {\n      const response = await fetch(\"http://localhost:9000/name\");\n      const userData = await response.json();\n      setUser(userData);\n    };\n    fetchUser();\n  }, []);\n  useEffect(() => {\n    const socket = io(\"http://localhost:8000\");\n    const form = document.getElementById(\"send-container\");\n    const messageInput = document.getElementById(\"messageInp\");\n    const messageContainer = document.querySelector(\".container\");\n    var audio = new Audio(ping);\n    audio.muted = true;\n    window.addEventListener(\"click\", function () {\n      audio.muted = false;\n    });\n    const append = (message, position) => {\n      const messageElement = document.createElement(\"div\");\n      const date = new Date(); // Get current date/time\n      const timestamp = `${date.getHours()}:${date.getMinutes()}`; // Format: HH:MM\n      messageElement.innerHTML = `<span class=\"timestamp\">${timestamp}</span>${message}`;\n      messageElement.classList.add(\"message\");\n      messageElement.classList.add(position);\n      messageContainer.append(messageElement);\n    };\n    form.addEventListener(\"submit\", e => {\n      e.preventDefault();\n      const message = messageInput.value;\n      append(`You: ${message}`, \"right\");\n      socket.emit(\"send\", message);\n      messageInput.value = \"\";\n    });\n    socket.on(\"user-joined\", data => {\n      append(`${data.firstName} joined the chat`, \"left\");\n    });\n    socket.on(\"receive\", data => {\n      append(`${data.firstName}: ${data.message}`, \"left\");\n      audio.play();\n    });\n    socket.on(\"left\", name => {\n      append(`${name} left the chat`, \"left\");\n    });\n    const getname = async function () {\n      let firstName = \"\";\n      let email = \"\";\n      console.log(\"User object at start of getname:\", user);\n      if (user && user.email) {\n        email = user.email;\n        const response = await fetch(\"http://localhost:9000/name\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: user.email\n          }),\n          headers: {\n            \"Content-Type\": \"Application/json\"\n          },\n          credentials: \"include\"\n        });\n        const data = await response.json();\n        console.log(\"Response data from server:\", data);\n        firstName = data.firstName;\n        console.log(\"First name after fetch:\", firstName);\n        setUser({\n          firstName,\n          email\n        }); // Update the state here\n        if (firstName) {\n          console.log(\"Emitting new-user-joined with firstName:\", firstName);\n          socket.emit(\"new-user-joined\", {\n            firstName\n          }); // Emit the event here\n        }\n      }\n      return {\n        firstName,\n        email\n      };\n    };\n    getname().then(({\n      firstName,\n      email\n    }) => {\n      console.log(firstName);\n      // Only call setUser if the user data has changed\n      if (user.firstName !== firstName || user.email !== email) {\n        setUser({\n          firstName,\n          email\n        }); // Update the state here\n      }\n      if (firstName) {\n        socket.emit(\"new-user-joined\", {\n          firstName\n        }); // Emit the event here\n      } else {\n        console.log(\"user not available\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [user]);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"logo\",\n        src: logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"h2\",\n        children: \"Anonymous Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"send\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        id: \"send-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"messageInp\",\n          placeholder: \"Message...\",\n          id: \"messageInp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: arrow,\n            alt: \"\",\n            srcset: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"DOoC7ZPMg97wvr4GTb3pIGAGLyg=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useContext","io","arrow","logo","ping","UserContext","jsxDEV","_jsxDEV","ChatPage","_s","user","setUser","fetchUser","response","fetch","userData","json","socket","form","document","getElementById","messageInput","messageContainer","querySelector","audio","Audio","muted","window","addEventListener","append","message","position","messageElement","createElement","date","Date","timestamp","getHours","getMinutes","innerHTML","classList","add","e","preventDefault","value","emit","on","data","firstName","play","name","getname","email","console","log","method","body","JSON","stringify","headers","credentials","then","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","class","src","alt","id","action","type","placeholder","srcset","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport io from \"socket.io-client\";\nimport arrow from \"../../assets/arrow.png\";\nimport logo from \"../../assets/logo.png\";\nimport \"./ChatPage.css\";\nimport ping from \"../../assets/ping.mp3\";\nimport { UserContext } from \"../../UserContextProvider\";\n\nconst ChatPage = () => {\n  const { user, setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    // Fetch user data from your server or local storage\n    const fetchUser = async () => {\n      const response = await fetch(\"http://localhost:9000/name\");\n      const userData = await response.json();\n      setUser(userData);\n    };\n\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    const socket = io(\"http://localhost:8000\");\n    const form = document.getElementById(\"send-container\");\n    const messageInput = document.getElementById(\"messageInp\");\n    const messageContainer = document.querySelector(\".container\");\n    var audio = new Audio(ping);\n    audio.muted = true;\n\n    window.addEventListener(\"click\", function () {\n      audio.muted = false;\n    });\n\n    const append = (message, position) => {\n      const messageElement = document.createElement(\"div\");\n      const date = new Date(); // Get current date/time\n      const timestamp = `${date.getHours()}:${date.getMinutes()}`; // Format: HH:MM\n      messageElement.innerHTML = `<span class=\"timestamp\">${timestamp}</span>${message}`;\n      messageElement.classList.add(\"message\");\n      messageElement.classList.add(position);\n      messageContainer.append(messageElement);\n    };\n\n    form.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      const message = messageInput.value;\n      append(`You: ${message}`, \"right\");\n      socket.emit(\"send\", message);\n      messageInput.value = \"\";\n    });\n\n    socket.on(\"user-joined\", (data) => {\n      append(`${data.firstName} joined the chat`, \"left\");\n    });\n\n    socket.on(\"receive\", (data) => {\n      append(`${data.firstName}: ${data.message}`, \"left\");\n      audio.play();\n    });\n    socket.on(\"left\", (name) => {\n      append(`${name} left the chat`, \"left\");\n    });\n\n    const getname = async function () {\n      let firstName = \"\";\n      let email = \"\";\n      console.log(\"User object at start of getname:\", user);\n\n      if (user && user.email) {\n        email = user.email;\n        const response = await fetch(\"http://localhost:9000/name\", {\n          method: \"POST\",\n          body: JSON.stringify({ email: user.email }),\n          headers: { \"Content-Type\": \"Application/json\" },\n          credentials: \"include\",\n        });\n\n        const data = await response.json();\n        console.log(\"Response data from server:\", data);\n        firstName = data.firstName;\n\n        console.log(\"First name after fetch:\", firstName);\n        setUser({ firstName, email }); // Update the state here\n        if (firstName) {\n          console.log(\"Emitting new-user-joined with firstName:\", firstName);\n          socket.emit(\"new-user-joined\", { firstName }); // Emit the event here\n        }\n      }\n      return { firstName, email };\n    };\n\n    getname()\n      .then(({ firstName, email }) => {\n        console.log(firstName);\n        // Only call setUser if the user data has changed\n        if (user.firstName !== firstName || user.email !== email) {\n          setUser({ firstName, email }); // Update the state here\n        }\n        if (firstName) {\n          socket.emit(\"new-user-joined\", { firstName }); // Emit the event here\n        } else {\n          console.log(\"user not available\");\n        }\n        \n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [user]);\n  if (!user) {\n    return <div>Loading...</div>;\n  }\n\n\n  return (\n    <div className=\"wrapper\">\n      <nav>\n        <img class=\"logo\" src={logo} alt=\"\" />\n        <h2 id=\"h2\">Anonymous Chat</h2>\n      </nav>\n\n      <div class=\"container\"></div>\n      <div class=\"send\">\n        <form action=\"#\" id=\"send-container\">\n          <input\n            type=\"text\"\n            name=\"messageInp\"\n            placeholder=\"Message...\"\n            id=\"messageInp\"\n          />\n          <button class=\"btn\" type=\"submit\">\n            <img src={arrow} alt=\"\" srcset=\"\" />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,uBAAuB;AACxC,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGX,UAAU,CAACK,WAAW,CAAC;EAEjDN,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtCL,OAAO,CAACI,QAAQ,CAAC;IACnB,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,MAAMkB,MAAM,GAAGhB,EAAE,CAAC,uBAAuB,CAAC;IAC1C,MAAMiB,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IACtD,MAAMC,YAAY,GAAGF,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IAC1D,MAAME,gBAAgB,GAAGH,QAAQ,CAACI,aAAa,CAAC,YAAY,CAAC;IAC7D,IAAIC,KAAK,GAAG,IAAIC,KAAK,CAACrB,IAAI,CAAC;IAC3BoB,KAAK,CAACE,KAAK,GAAG,IAAI;IAElBC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAY;MAC3CJ,KAAK,CAACE,KAAK,GAAG,KAAK;IACrB,CAAC,CAAC;IAEF,MAAMG,MAAM,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;MACpC,MAAMC,cAAc,GAAGb,QAAQ,CAACc,aAAa,CAAC,KAAK,CAAC;MACpD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;MACzB,MAAMC,SAAS,GAAI,GAAEF,IAAI,CAACG,QAAQ,CAAC,CAAE,IAAGH,IAAI,CAACI,UAAU,CAAC,CAAE,EAAC,CAAC,CAAC;MAC7DN,cAAc,CAACO,SAAS,GAAI,2BAA0BH,SAAU,UAASN,OAAQ,EAAC;MAClFE,cAAc,CAACQ,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;MACvCT,cAAc,CAACQ,SAAS,CAACC,GAAG,CAACV,QAAQ,CAAC;MACtCT,gBAAgB,CAACO,MAAM,CAACG,cAAc,CAAC;IACzC,CAAC;IAEDd,IAAI,CAACU,gBAAgB,CAAC,QAAQ,EAAGc,CAAC,IAAK;MACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,MAAMb,OAAO,GAAGT,YAAY,CAACuB,KAAK;MAClCf,MAAM,CAAE,QAAOC,OAAQ,EAAC,EAAE,OAAO,CAAC;MAClCb,MAAM,CAAC4B,IAAI,CAAC,MAAM,EAAEf,OAAO,CAAC;MAC5BT,YAAY,CAACuB,KAAK,GAAG,EAAE;IACzB,CAAC,CAAC;IAEF3B,MAAM,CAAC6B,EAAE,CAAC,aAAa,EAAGC,IAAI,IAAK;MACjClB,MAAM,CAAE,GAAEkB,IAAI,CAACC,SAAU,kBAAiB,EAAE,MAAM,CAAC;IACrD,CAAC,CAAC;IAEF/B,MAAM,CAAC6B,EAAE,CAAC,SAAS,EAAGC,IAAI,IAAK;MAC7BlB,MAAM,CAAE,GAAEkB,IAAI,CAACC,SAAU,KAAID,IAAI,CAACjB,OAAQ,EAAC,EAAE,MAAM,CAAC;MACpDN,KAAK,CAACyB,IAAI,CAAC,CAAC;IACd,CAAC,CAAC;IACFhC,MAAM,CAAC6B,EAAE,CAAC,MAAM,EAAGI,IAAI,IAAK;MAC1BrB,MAAM,CAAE,GAAEqB,IAAK,gBAAe,EAAE,MAAM,CAAC;IACzC,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAG,eAAAA,CAAA,EAAkB;MAChC,IAAIH,SAAS,GAAG,EAAE;MAClB,IAAII,KAAK,GAAG,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE5C,IAAI,CAAC;MAErD,IAAIA,IAAI,IAAIA,IAAI,CAAC0C,KAAK,EAAE;QACtBA,KAAK,GAAG1C,IAAI,CAAC0C,KAAK;QAClB,MAAMvC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACzDyC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEN,KAAK,EAAE1C,IAAI,CAAC0C;UAAM,CAAC,CAAC;UAC3CO,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,WAAW,EAAE;QACf,CAAC,CAAC;QAEF,MAAMb,IAAI,GAAG,MAAMlC,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCqC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEP,IAAI,CAAC;QAC/CC,SAAS,GAAGD,IAAI,CAACC,SAAS;QAE1BK,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEN,SAAS,CAAC;QACjDrC,OAAO,CAAC;UAAEqC,SAAS;UAAEI;QAAM,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAIJ,SAAS,EAAE;UACbK,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEN,SAAS,CAAC;UAClE/B,MAAM,CAAC4B,IAAI,CAAC,iBAAiB,EAAE;YAAEG;UAAU,CAAC,CAAC,CAAC,CAAC;QACjD;MACF;MACA,OAAO;QAAEA,SAAS;QAAEI;MAAM,CAAC;IAC7B,CAAC;IAEDD,OAAO,CAAC,CAAC,CACNU,IAAI,CAAC,CAAC;MAAEb,SAAS;MAAEI;IAAM,CAAC,KAAK;MAC9BC,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;MACtB;MACA,IAAItC,IAAI,CAACsC,SAAS,KAAKA,SAAS,IAAItC,IAAI,CAAC0C,KAAK,KAAKA,KAAK,EAAE;QACxDzC,OAAO,CAAC;UAAEqC,SAAS;UAAEI;QAAM,CAAC,CAAC,CAAC,CAAC;MACjC;MACA,IAAIJ,SAAS,EAAE;QACb/B,MAAM,CAAC4B,IAAI,CAAC,iBAAiB,EAAE;UAAEG;QAAU,CAAC,CAAC,CAAC,CAAC;MACjD,CAAC,MAAM;QACLK,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACnC;IAEF,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,CAACrD,IAAI,CAAC,CAAC;EACV,IAAI,CAACA,IAAI,EAAE;IACT,oBAAOH,OAAA;MAAAyD,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAGA,oBACE7D,OAAA;IAAK8D,SAAS,EAAC,SAAS;IAAAL,QAAA,gBACtBzD,OAAA;MAAAyD,QAAA,gBACEzD,OAAA;QAAK+D,KAAK,EAAC,MAAM;QAACC,GAAG,EAAEpE,IAAK;QAACqE,GAAG,EAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtC7D,OAAA;QAAIkE,EAAE,EAAC,IAAI;QAAAT,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEN7D,OAAA;MAAK+D,KAAK,EAAC;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7B7D,OAAA;MAAK+D,KAAK,EAAC,MAAM;MAAAN,QAAA,eACfzD,OAAA;QAAMmE,MAAM,EAAC,GAAG;QAACD,EAAE,EAAC,gBAAgB;QAAAT,QAAA,gBAClCzD,OAAA;UACEoE,IAAI,EAAC,MAAM;UACXzB,IAAI,EAAC,YAAY;UACjB0B,WAAW,EAAC,YAAY;UACxBH,EAAE,EAAC;QAAY;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACF7D,OAAA;UAAQ+D,KAAK,EAAC,KAAK;UAACK,IAAI,EAAC,QAAQ;UAAAX,QAAA,eAC/BzD,OAAA;YAAKgE,GAAG,EAAErE,KAAM;YAACsE,GAAG,EAAC,EAAE;YAACK,MAAM,EAAC;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3D,EAAA,CAlIID,QAAQ;AAAAsE,EAAA,GAARtE,QAAQ;AAoId,eAAeA,QAAQ;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}