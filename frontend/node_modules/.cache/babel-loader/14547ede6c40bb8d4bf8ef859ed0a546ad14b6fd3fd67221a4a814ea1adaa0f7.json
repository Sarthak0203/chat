{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/ChatPage/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport arrow from \"../../assets/arrow.png\";\nimport logo from \"../../assets/logo.png\";\nimport \"./ChatPage.css\";\nimport ping from \"../../assets/ping.mp3\";\nimport { UserContext } from \"../../UserContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const userRef = useRef(user);\n  const navigate = useNavigate();\n  let socket = io(\"http://localhost:8000\");\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    }\n    window.addEventListener(\"click\", function () {\n      audio.muted = false;\n    });\n    const getname = async function (user) {\n      let firstName = \"\";\n      let email = \"\";\n      console.log(\"User object at start of getname:\", userRef.current);\n      if (user && user.email) {\n        email = user.email;\n        const response = await fetch(\"http://localhost:9000/name\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: user.email\n          }),\n          headers: {\n            \"Content-Type\": \"Application/json\"\n          },\n          credentials: \"include\"\n        });\n        const data = await response.json();\n        console.log(\"Response data from server:\", data);\n        if (data && data.firstName) {\n          // Check if data and data.first_name are not null\n          firstName = data.firstName;\n          console.log(\"First name after fetch:\", firstName);\n          setUser({\n            firstName,\n            email\n          }); // Update the state here\n        } else {\n          console.log(\"First name not available in response data\");\n        }\n      }\n      return {\n        firstName,\n        email\n      };\n    };\n    const fetchUser = async () => {\n      console.log(\"fetchUser start\");\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n      console.log(\"storedUser:\", storedUser);\n      let userData;\n      if (storedUser) {\n        setUser(storedUser);\n        userData = storedUser;\n      } else if (user) {\n        console.log(\"user:\", user);\n        const response = await fetch(\"http://localhost:9000/name\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"Application/json\"\n          },\n          credentials: \"include\",\n          body: JSON.stringify({\n            email: user.email\n          })\n        });\n        console.log(\"response:\", response);\n        userData = await response.json();\n        console.log(\"userData:\", userData);\n      } else {\n        console.log(\"user is null in fetchuser\");\n      }\n      const {\n        firstName,\n        email\n      } = await getname(userData);\n      console.log(\"firstName, email:\", firstName, email);\n      setUser({\n        firstName,\n        email\n      });\n      if (firstName) {\n        socket.emit(\"new-user-joined\", {\n          firstName\n        });\n      } else {\n        console.log(\"user not available\");\n      }\n      console.log(\"fetchUser end\");\n    };\n\n    // console.log(user)\n    fetchUser();\n    const append = (message, position) => {\n      const messageElement = document.createElement(\"div\");\n      const date = new Date(); // Get current date/time\n      const timestamp = `${date.getHours()}:${date.getMinutes()}`; // Format: HH:MM\n      messageElement.innerHTML = `<span class=\"timestamp\">${timestamp}</span>${message}`;\n      messageElement.classList.add(\"message\");\n      messageElement.classList.add(position);\n      messageContainer.append(messageElement);\n    };\n    form.addEventListener(\"submit\", e => {\n      e.preventDefault();\n      console.log('form submitted');\n      const message = messageInput.value;\n      if (user && user.firstName) {\n        // Check if the user's name is defined\n        append(`You: ${message}`, \"right\");\n        socket.emit(\"send\", message);\n        messageInput.value = \"\";\n      } else {\n        console.log(\"User's name is not defined yet\");\n      }\n    });\n    socket.on(\"user-joined\", data => {\n      append(`${data.firstName} joined the chat`, \"left\");\n    });\n    socket.on(\"receive\", data => {\n      append(`${data.firstName}: ${data.message}`, \"left\");\n      audio.play();\n    });\n    socket.on(\"left\", name => {\n      append(`${name.firstName} left the chat`, \"left\");\n    });\n    // console.log(user)\n  }, []);\n  const handleLogout = () => {\n    // Emit 'logout' event before logging out\n    socket.emit('logout', {\n      firstName: user.firstName\n    }, () => {\n      localStorage.removeItem('token'); // Remove the token from local storage\n      navigate('/login'); // Redirect to login page\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"logo\",\n        src: logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"h2\",\n        children: \"Anonymous Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"send\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        id: \"send-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"messageInp\",\n          placeholder: \"Message...\",\n          id: \"messageInp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: arrow,\n            alt: \"\",\n            srcset: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"frLcboH6WGuBslRdNClT8Y/GArY=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useContext","useRef","useNavigate","io","arrow","logo","ping","UserContext","jsxDEV","_jsxDEV","ChatPage","_s","user","setUser","userRef","navigate","socket","token","localStorage","getItem","window","addEventListener","audio","muted","getname","firstName","email","console","log","current","response","fetch","method","body","JSON","stringify","headers","credentials","data","json","fetchUser","storedUser","parse","userData","emit","append","message","position","messageElement","document","createElement","date","Date","timestamp","getHours","getMinutes","innerHTML","classList","add","messageContainer","form","e","preventDefault","messageInput","value","on","play","name","handleLogout","removeItem","className","children","class","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","action","type","placeholder","srcset","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport arrow from \"../../assets/arrow.png\";\nimport logo from \"../../assets/logo.png\";\nimport \"./ChatPage.css\";\nimport ping from \"../../assets/ping.mp3\";\nimport { UserContext } from \"../../UserContextProvider\";\n\nconst ChatPage = () => {\n  const { user, setUser } = useContext(UserContext);\n  const userRef = useRef(user);\n  const navigate = useNavigate();\n  let socket = io(\"http://localhost:8000\");\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    }\n\n    window.addEventListener(\"click\", function () {\n      audio.muted = false;\n    });\n\n    const getname = async function (user) {\n      let firstName = \"\";\n      let email = \"\";\n      console.log(\"User object at start of getname:\", userRef.current);\n      if (user && user.email) {\n        email = user.email;\n        const response = await fetch(\"http://localhost:9000/name\", {\n          method: \"POST\",\n          body: JSON.stringify({ email: user.email }),\n          headers: { \"Content-Type\": \"Application/json\" },\n          credentials: \"include\",\n        });\n\n        const data = await response.json();\n        console.log(\"Response data from server:\", data);\n        if (data && data.firstName) {\n          // Check if data and data.first_name are not null\n          firstName = data.firstName;\n          console.log(\"First name after fetch:\", firstName);\n          setUser({ firstName, email }); // Update the state here\n        } else {\n          console.log(\"First name not available in response data\");\n        }\n      }\n      return { firstName, email };\n    };\n\n    const fetchUser = async () => {\n      console.log(\"fetchUser start\");\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n      console.log(\"storedUser:\", storedUser);\n      let userData;\n      if (storedUser) {\n        setUser(storedUser);\n        userData = storedUser;\n      } else if (user) {\n        console.log(\"user:\", user);\n        const response = await fetch(\"http://localhost:9000/name\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"Application/json\" },\n          credentials: \"include\",\n          body: JSON.stringify({ email: user.email }),\n        });\n        console.log(\"response:\", response);\n        userData = await response.json();\n        console.log(\"userData:\", userData);\n      } else {\n        console.log(\"user is null in fetchuser\");\n      }\n    \n      const { firstName, email } = await getname(userData);\n      console.log(\"firstName, email:\", firstName, email);\n    \n      setUser({ firstName, email });\n    \n      if (firstName) {\n        socket.emit(\"new-user-joined\", { firstName });\n      } else {\n        console.log(\"user not available\");\n      }\n      console.log(\"fetchUser end\");\n    };\n    \n\n    // console.log(user)\n    fetchUser();\n\n    const append = (message, position) => {\n      const messageElement = document.createElement(\"div\");\n      const date = new Date(); // Get current date/time\n      const timestamp = `${date.getHours()}:${date.getMinutes()}`; // Format: HH:MM\n      messageElement.innerHTML = `<span class=\"timestamp\">${timestamp}</span>${message}`;\n      messageElement.classList.add(\"message\");\n      messageElement.classList.add(position);\n      messageContainer.append(messageElement);\n    };\n\n    \nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  console.log('form submitted')\n  const message = messageInput.value;\n  if (user && user.firstName) { // Check if the user's name is defined\n    append(`You: ${message}`, \"right\");\n    socket.emit(\"send\", message);\n    messageInput.value = \"\";\n  } else {\n    console.log(\"User's name is not defined yet\");\n  }\n});\n\n    socket.on(\"user-joined\", (data) => {\n      append(`${data.firstName} joined the chat`, \"left\");\n    });\n\n    socket.on(\"receive\", (data) => {\n      append(`${data.firstName}: ${data.message}`, \"left\");\n      audio.play();\n    });\n    socket.on(\"left\", (name) => {\n      append(`${name.firstName} left the chat`, \"left\");\n    });\n    // console.log(user)\n\n    \n  }, []);\n\n  const handleLogout = () => {\n    // Emit 'logout' event before logging out\n    socket.emit('logout', { firstName: user.firstName }, () => {\n        localStorage.removeItem('token'); // Remove the token from local storage\n        navigate('/login'); // Redirect to login page\n    });\n};\n\n\n  return (\n    <div className=\"wrapper\">\n      <nav>\n        <img class=\"logo\" src={logo} alt=\"\" />\n        <h2 id=\"h2\">Anonymous Chat</h2>\n        <button onClick={handleLogout}>Logout</button>\n      </nav>\n\n      <div class=\"container\"></div>\n      <div class=\"send\">\n        <form action=\"#\" id=\"send-container\">\n          <input\n            type=\"text\"\n            name=\"messageInp\"\n            placeholder=\"Message...\"\n            id=\"messageInp\"\n          />\n          <button class=\"btn\" type=\"submit\">\n            <img src={arrow} alt=\"\" srcset=\"\" />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}