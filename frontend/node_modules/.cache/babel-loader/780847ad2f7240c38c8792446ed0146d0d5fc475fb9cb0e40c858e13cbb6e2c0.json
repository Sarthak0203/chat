{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/ChatPage/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport arrow from \"../../assets/arrow.png\";\nimport logo from \"../../assets/logo.png\";\nimport \"./ChatPage.css\";\nimport ping from \"../../assets/ping.mp3\";\nimport { UserContext } from \"../../UserContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const userRef = useRef(user);\n  useEffect(() => {\n    userRef.current = user; // Update the ref with the latest user state\n  }, [user]); // This runs whenever user state changes\n\n  useEffect(() => {\n    if (user) {\n      const fetchUser = async () => {\n        const storedUser = JSON.parse(localStorage.getItem('user'));\n        if (storedUser) {\n          setUser(storedUser);\n        } else {\n          const response = await fetch(\"http://localhost:9000/name\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\"\n            },\n            credentials: \"include\",\n            body: JSON.stringify({\n              email: user.email\n            })\n          });\n          const userData = await response.json();\n          console.log(userData);\n          const {\n            firstName,\n            email\n          } = await getname(userData);\n          console.log(firstName);\n          setUser({\n            firstName,\n            email\n          });\n          if (firstName) {\n            socket.emit(\"new-user-joined\", {\n              firstName\n            });\n          } else {\n            console.log(\"user not available\");\n          }\n        }\n      };\n      fetchUser();\n    }\n  }, [user]);\n  const getname = async function (user) {\n    let firstName = \"\";\n    let email = \"\";\n    console.log(\"User object at start of getname:\", userRef.current);\n    if (user && user.email) {\n      email = user.email;\n      const response = await fetch(\"http://localhost:9000/name\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: user.email\n        }),\n        headers: {\n          \"Content-Type\": \"Application/json\"\n        },\n        credentials: \"include\"\n      });\n      const data = await response.json();\n      console.log(\"Response data from server:\", data);\n      if (data && data.first_name) {\n        // Check if data and data.first_name are not null\n        firstName = data.first_name;\n        console.log(\"First name after fetch:\", firstName);\n        setUser({\n          firstName,\n          email\n        }); // Update the state here\n      } else {\n        console.log(\"First name not available in response data\");\n      }\n    }\n    return {\n      firstName,\n      email\n    };\n  };\n  const socket = io(\"http://localhost:8000\");\n  const form = document.getElementById(\"send-container\");\n  const messageInput = document.getElementById(\"messageInp\");\n  const messageContainer = document.querySelector(\".container\");\n  var audio = new Audio(ping);\n  audio.muted = true;\n  window.addEventListener(\"click\", function () {\n    audio.muted = false;\n  });\n  const append = (message, position) => {\n    const messageElement = document.createElement(\"div\");\n    const date = new Date(); // Get current date/time\n    const timestamp = `${date.getHours()}:${date.getMinutes()}`; // Format: HH:MM\n    messageElement.innerHTML = `<span class=\"timestamp\">${timestamp}</span>${message}`;\n    messageElement.classList.add(\"message\");\n    messageElement.classList.add(position);\n    messageContainer.append(messageElement);\n  };\n  form.addEventListener(\"submit\", e => {\n    e.preventDefault();\n    const message = messageInput.value;\n    append(`You: ${message}`, \"right\");\n    socket.emit(\"send\", message);\n    messageInput.value = \"\";\n  });\n  socket.on(\"user-joined\", data => {\n    append(`${data.firstName} joined the chat`, \"left\");\n  });\n  socket.on(\"receive\", data => {\n    append(`${data.firstName}: ${data.message}`, \"left\");\n    audio.play();\n  });\n  socket.on(\"left\", name => {\n    append(`${name} left the chat`, \"left\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"logo\",\n        src: logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"h2\",\n        children: \"Anonymous Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"send\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        id: \"send-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"messageInp\",\n          placeholder: \"Message...\",\n          id: \"messageInp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: arrow,\n            alt: \"\",\n            srcset: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"4Thi+2i8vUoUgKwbhGSCtQa5Hn0=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useContext","useRef","io","arrow","logo","ping","UserContext","jsxDEV","_jsxDEV","ChatPage","_s","user","setUser","userRef","current","fetchUser","storedUser","JSON","parse","localStorage","getItem","response","fetch","method","headers","credentials","body","stringify","email","userData","json","console","log","firstName","getname","socket","emit","data","first_name","form","document","getElementById","messageInput","messageContainer","querySelector","audio","Audio","muted","window","addEventListener","append","message","position","messageElement","createElement","date","Date","timestamp","getHours","getMinutes","innerHTML","classList","add","e","preventDefault","value","on","play","name","className","children","class","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","action","type","placeholder","srcset","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useContext, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport arrow from \"../../assets/arrow.png\";\nimport logo from \"../../assets/logo.png\";\nimport \"./ChatPage.css\";\nimport ping from \"../../assets/ping.mp3\";\nimport { UserContext } from \"../../UserContextProvider\";\n\nconst ChatPage = () => {\n  const { user, setUser } = useContext(UserContext);\n  const userRef = useRef(user);\n\n  useEffect(() => {\n    userRef.current = user; // Update the ref with the latest user state\n  }, [user]); // This runs whenever user state changes\n  \n  useEffect(() => {\n    if (user) {\n      const fetchUser = async () => {\n        const storedUser = JSON.parse(localStorage.getItem('user'));\n        if (storedUser) {\n          setUser(storedUser);\n        } else {\n          const response = await fetch(\"http://localhost:9000/name\",{\n            method: \"POST\",\n            headers: { \"Content-Type\": \"Application/json\" },\n            credentials: \"include\",\n            body: JSON.stringify({ email: user.email })\n          });\n          const userData = await response.json();\n          console.log(userData);\n      \n          const { firstName, email } = await getname(userData);\n          console.log(firstName);\n      \n          setUser({ firstName, email });\n\n          if (firstName) {\n            socket.emit(\"new-user-joined\", { firstName });\n          } else {\n            console.log(\"user not available\");\n          }\n        }\n      };\n      fetchUser();\n    }\n  }, [user]);\n\n  const getname = async function (user) {\n    let firstName = \"\";\n    let email = \"\";\n    console.log(\"User object at start of getname:\", userRef.current);\n\n    if (user && user.email) {\n      email = user.email;\n      const response = await fetch(\"http://localhost:9000/name\", {\n        method: \"POST\",\n        body: JSON.stringify({ email: user.email }),\n        headers: { \"Content-Type\": \"Application/json\" },\n        credentials: \"include\",\n      });\n\n      const data = await response.json();\n      console.log(\"Response data from server:\", data);\n      if (data && data.first_name) { // Check if data and data.first_name are not null\n        firstName = data.first_name;\n        console.log(\"First name after fetch:\", firstName);\n        setUser({ firstName, email }); // Update the state here\n      } else {\n        console.log(\"First name not available in response data\");\n      }\n    }\n    return { firstName, email };\n  };\n\n  const socket = io(\"http://localhost:8000\");\n  const form = document.getElementById(\"send-container\");\n  const messageInput = document.getElementById(\"messageInp\");\n  const messageContainer = document.querySelector(\".container\");\n  var audio = new Audio(ping);\n  audio.muted = true;\n\n  window.addEventListener(\"click\", function () {\n    audio.muted = false;\n  });\n\n  const append = (message, position) => {\n    const messageElement = document.createElement(\"div\");\n    const date = new Date(); // Get current date/time\n    const timestamp = `${date.getHours()}:${date.getMinutes()}`; // Format: HH:MM\n    messageElement.innerHTML = `<span class=\"timestamp\">${timestamp}</span>${message}`;\n    messageElement.classList.add(\"message\");\n    messageElement.classList.add(position);\n    messageContainer.append(messageElement);\n  };\n\n  form.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    const message = messageInput.value;\n    append(`You: ${message}`, \"right\");\n    socket.emit(\"send\", message);\n    messageInput.value = \"\";\n  });\n\n  socket.on(\"user-joined\", (data) => {\n    append(`${data.firstName} joined the chat`, \"left\");\n  });\n\n  socket.on(\"receive\", (data) => {\n    append(`${data.firstName}: ${data.message}`, \"left\");\n    audio.play();\n  });\n  socket.on(\"left\", (name) => {\n    append(`${name} left the chat`, \"left\");\n  });\n\n  return (\n    <div className=\"wrapper\">\n      <nav>\n        <img class=\"logo\" src={logo} alt=\"\" />\n        <h2 id=\"h2\">Anonymous Chat</h2>\n      </nav>\n\n      <div class=\"container\"></div>\n      <div class=\"send\">\n        <form action=\"#\" id=\"send-container\">\n          <input\n            type=\"text\"\n            name=\"messageInp\"\n            placeholder=\"Message...\"\n            id=\"messageInp\"\n          />\n          <button class=\"btn\" type=\"submit\">\n            <img src={arrow} alt=\"\" srcset=\"\" />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}