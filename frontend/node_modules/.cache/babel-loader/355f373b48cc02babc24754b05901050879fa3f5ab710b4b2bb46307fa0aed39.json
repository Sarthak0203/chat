{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/VideoCall/VideoCall.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoChat = () => {\n  _s();\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const [signalingServer, setSignalingServer] = useState(null);\n  const [remoteUserId, setRemoteUserId] = useState(null); // You need to set this ID appropriately\n  const [isPeerConnectionReady, setIsPeerConnectionReady] = useState(false);\n  var [peerConnection, setPeerConnection] = useState(null);\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [caller, setCaller] = useState(null);\n  const [callerSignal, setCallerSignal] = useState(null);\n  useEffect(() => {\n    console.log('Incoming call state: ', incomingCall);\n  }, [incomingCall]);\n  useEffect(() => {\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    setPeerConnection(pc);\n  }, []);\n  useEffect(() => {\n    // Initialize the signaling server\n    const server = io('http://localhost:7500');\n    setSignalingServer(server);\n    server.on('video-offer', async message => {\n      console.log('Received video-offer');\n      setIncomingCall(prevState => !prevState); // Toggle the state\n      setCaller(message.source);\n      setCallerSignal(message.offer);\n    });\n    server.on('user-connected', id => {\n      setRemoteUserId(id);\n    });\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localVideoRef.current.srcObject = stream;\n      peerConnection = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }]\n      });\n      if (peerConnection) {\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n        peerConnection.onicecandidate = event => {\n          console.log(remoteUserId);\n          if (event.candidate) {\n            server.emit('new-ice-candidate', {\n              candidate: event.candidate,\n              target: remoteUserId\n            });\n          }\n        };\n        peerConnection.ontrack = event => {\n          remoteVideoRef.current.srcObject = event.streams[0];\n        };\n\n        // Set isPeerConnectionReady to true after peerConnection has been initialized\n        setIsPeerConnectionReady(true);\n      }\n    });\n  }, []);\n  const startCall = async () => {\n    if (!peerConnection) {\n      console.log('Peer connection is not established yet');\n      return;\n    }\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n\n    // Send the offer to the other peer via your signaling server\n    signalingServer.emit('offer', {\n      type: 'video-offer',\n      target: remoteUserId,\n      // The ID of the other user\n      offer: offer\n    });\n    console.log('Emitted offer');\n  };\n  const answerCall = async () => {\n    setIncomingCall(false);\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    pc.setRemoteDescription(new RTCSessionDescription(callerSignal));\n    const sdp = await pc.createAnswer();\n    pc.setLocalDescription(sdp);\n    signalingServer.send({\n      type: 'video-answer',\n      target: caller,\n      answer: sdp\n    });\n  };\n  const declineCall = () => {\n    setIncomingCall(false);\n    // You can add more actions here if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: localVideoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: remoteVideoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCall,\n      disabled: !isPeerConnectionReady,\n      children: \"Start Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), incomingCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Incoming Call...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: answerCall,\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: declineCall,\n        children: \"Decline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoChat, \"s6Z4PxlKCE24GoBRWL9bt/Yh55k=\");\n_c = VideoChat;\nexport default VideoChat;\nvar _c;\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","VideoChat","_s","localVideoRef","remoteVideoRef","signalingServer","setSignalingServer","remoteUserId","setRemoteUserId","isPeerConnectionReady","setIsPeerConnectionReady","peerConnection","setPeerConnection","incomingCall","setIncomingCall","caller","setCaller","callerSignal","setCallerSignal","console","log","pc","RTCPeerConnection","iceServers","urls","server","on","message","prevState","source","offer","id","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","emit","target","ontrack","streams","startCall","createOffer","setLocalDescription","type","answerCall","setRemoteDescription","RTCSessionDescription","sdp","createAnswer","send","answer","declineCall","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/VideoCall/VideoCall.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst VideoChat = () => {\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const [signalingServer, setSignalingServer] = useState(null);\n  const [remoteUserId, setRemoteUserId] = useState(null); // You need to set this ID appropriately\n  const [isPeerConnectionReady, setIsPeerConnectionReady] = useState(false);\n\n  var [peerConnection, setPeerConnection] = useState(null);\n\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [caller, setCaller] = useState(null);\n  const [callerSignal, setCallerSignal] = useState(null);\n\n  useEffect(() => {\n    console.log('Incoming call state: ', incomingCall);\n  }, [incomingCall]);\n\n  useEffect(() => {\n    const pc = new RTCPeerConnection({\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n    });\n\n    setPeerConnection(pc);\n  }, []);\n\n  useEffect(() => {\n    // Initialize the signaling server\n    const server = io('http://localhost:7500');\n    setSignalingServer(server);\n  \n    server.on('video-offer', async (message) => {\n        console.log('Received video-offer');\n        setIncomingCall(prevState => !prevState); // Toggle the state\n        setCaller(message.source);\n        setCallerSignal(message.offer);\n      });\n  \n  \n    server.on('user-connected', (id) => {\n        setRemoteUserId(id);\n      });\n  \n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        localVideoRef.current.srcObject = stream;\n  \n        peerConnection = new RTCPeerConnection({\n          iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n        });\n\n        if (peerConnection) {\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n  \n        peerConnection.onicecandidate = event => {\n            console.log(remoteUserId)\n          if (event.candidate) {\n            server.emit('new-ice-candidate', {\n              candidate: event.candidate,\n              target: remoteUserId\n            });\n          }\n        };\n  \n        peerConnection.ontrack = event => {\n          remoteVideoRef.current.srcObject = event.streams[0];\n        };\n        \n  \n        // Set isPeerConnectionReady to true after peerConnection has been initialized\n        setIsPeerConnectionReady(true);\n    }\n      });\n  }, []);\n\n  const startCall = async () => {\n    if (!peerConnection) {\n      console.log('Peer connection is not established yet');\n      return;\n    }\n  \n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n  \n    // Send the offer to the other peer via your signaling server\n    signalingServer.emit('offer', {\n        type: 'video-offer',\n        target: remoteUserId, // The ID of the other user\n        offer: offer\n      });\n      console.log('Emitted offer');\n  };\n  \n  const answerCall = async () => {\n    setIncomingCall(false);\n    const pc = new RTCPeerConnection({\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n    });\n    pc.setRemoteDescription(new RTCSessionDescription(callerSignal));\n    const sdp = await pc.createAnswer();\n    pc.setLocalDescription(sdp);\n    signalingServer.send({\n      type: 'video-answer',\n      target: caller,\n      answer: sdp\n    });\n  };\n  const declineCall = () => {\n    setIncomingCall(false);\n    // You can add more actions here if needed\n  };\n\n  return (\n    <div>\n      <video ref={localVideoRef} autoPlay muted />\n      <video ref={remoteVideoRef} autoPlay />\n      <button onClick={startCall} disabled={!isPeerConnectionReady}>Start Call</button>\n      {incomingCall && (\n        <div>\n          <h1>Incoming Call...</h1>\n          <button onClick={answerCall}>Answer</button>\n          <button onClick={declineCall}>Decline</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoChat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,aAAa,GAAGP,MAAM,CAAC,CAAC;EAC9B,MAAMQ,cAAc,GAAGR,MAAM,CAAC,CAAC;EAC/B,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACY,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEzE,IAAI,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAEtDF,SAAS,CAAC,MAAM;IACdwB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEP,YAAY,CAAC;EACpD,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBlB,SAAS,CAAC,MAAM;IACd,MAAM0B,EAAE,GAAG,IAAIC,iBAAiB,CAAC;MAC/BC,UAAU,EAAE,CAAC;QAAEC,IAAI,EAAE;MAA+B,CAAC;IACvD,CAAC,CAAC;IAEFZ,iBAAiB,CAACS,EAAE,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN1B,SAAS,CAAC,MAAM;IACd;IACA,MAAM8B,MAAM,GAAG3B,EAAE,CAAC,uBAAuB,CAAC;IAC1CQ,kBAAkB,CAACmB,MAAM,CAAC;IAE1BA,MAAM,CAACC,EAAE,CAAC,aAAa,EAAE,MAAOC,OAAO,IAAK;MACxCR,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCN,eAAe,CAACc,SAAS,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC;MAC1CZ,SAAS,CAACW,OAAO,CAACE,MAAM,CAAC;MACzBX,eAAe,CAACS,OAAO,CAACG,KAAK,CAAC;IAChC,CAAC,CAAC;IAGJL,MAAM,CAACC,EAAE,CAAC,gBAAgB,EAAGK,EAAE,IAAK;MAChCvB,eAAe,CAACuB,EAAE,CAAC;IACrB,CAAC,CAAC;IAEJC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAC9DC,IAAI,CAACC,MAAM,IAAI;MACdnC,aAAa,CAACoC,OAAO,CAACC,SAAS,GAAGF,MAAM;MAExC3B,cAAc,GAAG,IAAIW,iBAAiB,CAAC;QACrCC,UAAU,EAAE,CAAC;UAAEC,IAAI,EAAE;QAA+B,CAAC;MACvD,CAAC,CAAC;MAEF,IAAIb,cAAc,EAAE;QACpB2B,MAAM,CAACG,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIhC,cAAc,CAACiC,QAAQ,CAACD,KAAK,EAAEL,MAAM,CAAC,CAAC;QAE3E3B,cAAc,CAACkC,cAAc,GAAGC,KAAK,IAAI;UACrC3B,OAAO,CAACC,GAAG,CAACb,YAAY,CAAC;UAC3B,IAAIuC,KAAK,CAACC,SAAS,EAAE;YACnBtB,MAAM,CAACuB,IAAI,CAAC,mBAAmB,EAAE;cAC/BD,SAAS,EAAED,KAAK,CAACC,SAAS;cAC1BE,MAAM,EAAE1C;YACV,CAAC,CAAC;UACJ;QACF,CAAC;QAEDI,cAAc,CAACuC,OAAO,GAAGJ,KAAK,IAAI;UAChC1C,cAAc,CAACmC,OAAO,CAACC,SAAS,GAAGM,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;QACrD,CAAC;;QAGD;QACAzC,wBAAwB,CAAC,IAAI,CAAC;MAClC;IACE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM0C,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACzC,cAAc,EAAE;MACnBQ,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrD;IACF;IAEA,MAAMU,KAAK,GAAG,MAAMnB,cAAc,CAAC0C,WAAW,CAAC,CAAC;IAChD,MAAM1C,cAAc,CAAC2C,mBAAmB,CAACxB,KAAK,CAAC;;IAE/C;IACAzB,eAAe,CAAC2C,IAAI,CAAC,OAAO,EAAE;MAC1BO,IAAI,EAAE,aAAa;MACnBN,MAAM,EAAE1C,YAAY;MAAE;MACtBuB,KAAK,EAAEA;IACT,CAAC,CAAC;IACFX,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAChC,CAAC;EAED,MAAMoC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B1C,eAAe,CAAC,KAAK,CAAC;IACtB,MAAMO,EAAE,GAAG,IAAIC,iBAAiB,CAAC;MAC/BC,UAAU,EAAE,CAAC;QAAEC,IAAI,EAAE;MAA+B,CAAC;IACvD,CAAC,CAAC;IACFH,EAAE,CAACoC,oBAAoB,CAAC,IAAIC,qBAAqB,CAACzC,YAAY,CAAC,CAAC;IAChE,MAAM0C,GAAG,GAAG,MAAMtC,EAAE,CAACuC,YAAY,CAAC,CAAC;IACnCvC,EAAE,CAACiC,mBAAmB,CAACK,GAAG,CAAC;IAC3BtD,eAAe,CAACwD,IAAI,CAAC;MACnBN,IAAI,EAAE,cAAc;MACpBN,MAAM,EAAElC,MAAM;MACd+C,MAAM,EAAEH;IACV,CAAC,CAAC;EACJ,CAAC;EACD,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBjD,eAAe,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgE,QAAA,gBACEhE,OAAA;MAAOiE,GAAG,EAAE9D,aAAc;MAAC+D,QAAQ;MAACC,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CvE,OAAA;MAAOiE,GAAG,EAAE7D,cAAe;MAAC8D,QAAQ;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCvE,OAAA;MAAQwE,OAAO,EAAEpB,SAAU;MAACqB,QAAQ,EAAE,CAAChE,qBAAsB;MAAAuD,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChF1D,YAAY,iBACXb,OAAA;MAAAgE,QAAA,gBACEhE,OAAA;QAAAgE,QAAA,EAAI;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBvE,OAAA;QAAQwE,OAAO,EAAEhB,UAAW;QAAAQ,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5CvE,OAAA;QAAQwE,OAAO,EAAET,WAAY;QAAAC,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrE,EAAA,CA7HID,SAAS;AAAAyE,EAAA,GAATzE,SAAS;AA+Hf,eAAeA,SAAS;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}