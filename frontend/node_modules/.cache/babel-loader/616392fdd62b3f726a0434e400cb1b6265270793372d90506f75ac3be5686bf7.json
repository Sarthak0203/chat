{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/ChatPage/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport arrow from \"../../assets/arrow.png\";\nimport logo from \"../../assets/logo.png\";\nimport \"./ChatPage.css\";\nimport ping from \"../../assets/ping.mp3\";\nimport { UserContext } from \"../../UserContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const userRef = useRef(user);\n  useEffect(() => {\n    const socket = io(\"http://localhost:8000\");\n    const form = document.getElementById(\"send-container\");\n    const messageInput = document.getElementById(\"messageInp\");\n    const messageContainer = document.querySelector(\".container\");\n    var audio = new Audio(ping);\n    audio.muted = true;\n    window.addEventListener(\"click\", function () {\n      audio.muted = false;\n    });\n    const fetchUser = async () => {\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      if (storedUser) {\n        setUser(storedUser);\n      } else if (user) {\n        const response = await fetch(\"http://localhost:9000/name\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"Application/json\"\n          },\n          credentials: \"include\",\n          body: JSON.stringify({\n            email: user.email\n          })\n        });\n        console.log(response);\n        const userData = await response.json();\n        console.log(userData);\n        const {\n          firstName,\n          email\n        } = await getname(userData);\n        // const risp = await getname(userData);\n        // console.log(risp)\n        // const firstName = 'lksadfj';\n        // const email = 'slkdf';\n        console.log(firstName);\n        setUser({\n          firstName,\n          email\n        });\n        if (firstName) {\n          socket.emit(\"new-user-joined\", {\n            firstName\n          });\n        } else {\n          console.log(\"user not available\");\n        }\n      } else {\n        console.log('user is null in fetchuser');\n      }\n    };\n    // console.log(user)\n    fetchUser();\n    const append = (message, position) => {\n      const messageElement = document.createElement(\"div\");\n      const date = new Date(); // Get current date/time\n      const timestamp = `${date.getHours()}:${date.getMinutes()}`; // Format: HH:MM\n      messageElement.innerHTML = `<span class=\"timestamp\">${timestamp}</span>${message}`;\n      messageElement.classList.add(\"message\");\n      messageElement.classList.add(position);\n      messageContainer.append(messageElement);\n    };\n    form.addEventListener(\"submit\", e => {\n      e.preventDefault();\n      const message = messageInput.value;\n      append(`You: ${message}`, \"right\");\n      socket.emit(\"send\", message);\n      messageInput.value = \"\";\n    });\n    socket.on(\"user-joined\", data => {\n      append(`${data.firstName} joined the chat`, \"left\");\n    });\n    socket.on(\"receive\", data => {\n      append(`${data.firstName}: ${data.message}`, \"left\");\n      audio.play();\n    });\n    socket.on(\"left\", name => {\n      append(`${name} left the chat`, \"left\");\n    });\n    // console.log(user)\n\n    const getname = async function (user) {\n      let firstName = \"\";\n      let email = \"\";\n      console.log(\"User object at start of getname:\", userRef.current);\n      if (user && user.email) {\n        email = user.email;\n        const response = await fetch(\"http://localhost:9000/name\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: user.email\n          }),\n          headers: {\n            \"Content-Type\": \"Application/json\"\n          },\n          credentials: \"include\"\n        });\n        const data = await response.json();\n        console.log(\"Response data from server:\", data);\n        if (data && data.first_name) {\n          // Check if data and data.first_name are not null\n          firstName = data.first_name;\n          console.log(\"First name after fetch:\", firstName);\n          setUser({\n            firstName,\n            email\n          }); // Update the state here\n        } else {\n          console.log(\"First name not available in response data\");\n        }\n      }\n      return {\n        firstName,\n        email\n      };\n    };\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"logo\",\n        src: logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"h2\",\n        children: \"Anonymous Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"send\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        id: \"send-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"messageInp\",\n          placeholder: \"Message...\",\n          id: \"messageInp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: arrow,\n            alt: \"\",\n            srcset: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"BbJ9v7S0sMbH9AgxvYfJqNtzkyU=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useContext","useRef","io","arrow","logo","ping","UserContext","jsxDEV","_jsxDEV","ChatPage","_s","user","setUser","userRef","socket","form","document","getElementById","messageInput","messageContainer","querySelector","audio","Audio","muted","window","addEventListener","fetchUser","storedUser","JSON","parse","localStorage","getItem","response","fetch","method","headers","credentials","body","stringify","email","console","log","userData","json","firstName","getname","emit","append","message","position","messageElement","createElement","date","Date","timestamp","getHours","getMinutes","innerHTML","classList","add","e","preventDefault","value","on","data","play","name","current","first_name","className","children","class","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","action","type","placeholder","srcset","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useContext, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport arrow from \"../../assets/arrow.png\";\nimport logo from \"../../assets/logo.png\";\nimport \"./ChatPage.css\";\nimport ping from \"../../assets/ping.mp3\";\nimport { UserContext } from \"../../UserContextProvider\";\n\nconst ChatPage = () => {\n  const { user, setUser } = useContext(UserContext);\n  const userRef = useRef(user);\n\n  \n  useEffect(() => {\n    \n    const socket = io(\"http://localhost:8000\");\n    const form = document.getElementById(\"send-container\");\n    const messageInput = document.getElementById(\"messageInp\");\n    const messageContainer = document.querySelector(\".container\");\n    var audio = new Audio(ping);\n    audio.muted = true;\n\n    window.addEventListener(\"click\", function () {\n      audio.muted = false;\n    });\n\n    const fetchUser = async () => {\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      if (storedUser) {\n        setUser(storedUser);\n      } else if (user) {\n        const response = await fetch(\"http://localhost:9000/name\",{\n          method: \"POST\",\n          headers: { \"Content-Type\": \"Application/json\" },\n          credentials: \"include\",\n          body: JSON.stringify({ email: user.email })\n        });\n        console.log(response)\n        const userData = await response.json();\n        console.log(userData);\n    \n        const { firstName, email } = await getname(userData);\n        // const risp = await getname(userData);\n        // console.log(risp)\n        // const firstName = 'lksadfj';\n        // const email = 'slkdf';\n        console.log(firstName);\n    \n        setUser({ firstName, email });\n\n    \n        if (firstName) {\n          socket.emit(\"new-user-joined\", { firstName });\n        } else {\n          console.log(\"user not available\");\n        }\n      } else {\n        console.log('user is null in fetchuser')\n      }\n    };\n    // console.log(user)\n    fetchUser();\n\n\n    const append = (message, position) => {\n      const messageElement = document.createElement(\"div\");\n      const date = new Date(); // Get current date/time\n      const timestamp = `${date.getHours()}:${date.getMinutes()}`; // Format: HH:MM\n      messageElement.innerHTML = `<span class=\"timestamp\">${timestamp}</span>${message}`;\n      messageElement.classList.add(\"message\");\n      messageElement.classList.add(position);\n      messageContainer.append(messageElement);\n    };\n\n    form.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      const message = messageInput.value;\n      append(`You: ${message}`, \"right\");\n      socket.emit(\"send\", message);\n      messageInput.value = \"\";\n    });\n\n    socket.on(\"user-joined\", (data) => {\n      append(`${data.firstName} joined the chat`, \"left\");\n    });\n\n    socket.on(\"receive\", (data) => {\n      append(`${data.firstName}: ${data.message}`, \"left\");\n      audio.play();\n    });\n    socket.on(\"left\", (name) => {\n      append(`${name} left the chat`, \"left\");\n    });\n    // console.log(user)\n\n    const getname = async function (user) {\n      let firstName = \"\";\n      let email = \"\";\n      console.log(\"User object at start of getname:\", userRef.current);\n    \n      if (user && user.email) {\n        email = user.email;\n        const response = await fetch(\"http://localhost:9000/name\", {\n          method: \"POST\",\n          body: JSON.stringify({ email: user.email }),\n          headers: { \"Content-Type\": \"Application/json\" },\n          credentials: \"include\",\n        });\n    \n        const data = await response.json();\n        console.log(\"Response data from server:\", data);\n        if (data && data.first_name) { // Check if data and data.first_name are not null\n          firstName = data.first_name;\n          console.log(\"First name after fetch:\", firstName);\n          setUser({ firstName, email }); // Update the state here\n        } else {\n          console.log(\"First name not available in response data\");\n        }\n      }\n      return { firstName, email };\n    };\n     \n  }, [user]);\n\n  return (\n    <div className=\"wrapper\">\n      <nav>\n        <img class=\"logo\" src={logo} alt=\"\" />\n        <h2 id=\"h2\">Anonymous Chat</h2>\n      </nav>\n\n      <div class=\"container\"></div>\n      <div class=\"send\">\n        <form action=\"#\" id=\"send-container\">\n          <input\n            type=\"text\"\n            name=\"messageInp\"\n            placeholder=\"Message...\"\n            id=\"messageInp\"\n          />\n          <button class=\"btn\" type=\"submit\">\n            <img src={arrow} alt=\"\" srcset=\"\" />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}