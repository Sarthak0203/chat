{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/VideoCall/VideoCall.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoChat = () => {\n  _s();\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const signalingServer = useRef(null);\n  const [remoteUserId, setRemoteUserId] = useState(null);\n  const [isPeerConnectionReady, setIsPeerConnectionReady] = useState(false);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [caller, setCaller] = useState(null);\n  const [callerSignal, setCallerSignal] = useState(null);\n  const [iceCandidates, setIceCandidates] = useState([]);\n  useEffect(() => {\n    console.log('Incoming call state: ', incomingCall);\n  }, [incomingCall]);\n  useEffect(() => {\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    setPeerConnection(pc);\n  }, []);\n  useEffect(() => {\n    if (peerConnection) {\n      signalingServer.current = io('http://localhost:7500');\n      signalingServer.current.on('connect', () => {\n        console.log('Connected to signaling server');\n      });\n      signalingServer.current.on('video-offer', async message => {\n        console.log('Received video-offer', message);\n        if (!message.offer) {\n          console.log('No offer in video-offer message');\n          return;\n        }\n        console.log('Setting incoming call, caller, and caller signal');\n        setIncomingCall(true);\n        setCaller(message.source);\n        setCallerSignal(message.offer);\n      });\n      signalingServer.current.on('user-connected', id => {\n        console.log('User connected', id);\n        setRemoteUserId(id);\n\n        // Send the stored ICE candidates to the remote user\n        iceCandidates.forEach(candidate => {\n          signalingServer.current.emit('new-ice-candidate', {\n            candidate: candidate,\n            target: id\n          });\n        });\n      });\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(stream => {\n        localVideoRef.current.srcObject = stream;\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n        peerConnection.onicecandidate = event => {\n          if (remoteUserId) {\n            console.log('ICE candidate', remoteUserId);\n            signalingServer.current.emit('new-ice-candidate', {\n              candidate: event.candidate,\n              target: remoteUserId\n            });\n          } else {\n            console.log('ICE candidate generated before user connected');\n            setIceCandidates(prevState => [...prevState, event.candidate]);\n          }\n        };\n        peerConnection.ontrack = event => {\n          remoteVideoRef.current.srcObject = event.streams[0];\n        };\n        setIsPeerConnectionReady(true);\n      }).catch(error => {\n        console.error(\"Error accessing media devices.\", error);\n      });\n    }\n  }, [peerConnection]);\n  const startCall = async () => {\n    if (!peerConnection) {\n      console.log('Peer connection is not established yet');\n      return;\n    }\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    console.log('Emitting offer to', remoteUserId);\n    signalingServer.current.emit('offer', {\n      type: 'video-offer',\n      target: remoteUserId,\n      offer: offer\n    });\n    console.log('Emitted offer');\n  };\n  const answerCall = async () => {\n    console.log('Answering call with caller signal', callerSignal);\n    if (!callerSignal) {\n      console.log('Caller signal is null');\n      return;\n    }\n    setIncomingCall(false);\n    await peerConnection.setRemoteDescription(new RTCSessionDescription(callerSignal));\n    const sdp = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(sdp);\n    signalingServer.current.emit('answer', {\n      type: 'video-answer',\n      target: caller,\n      answer: sdp\n    });\n  };\n  const declineCall = () => {\n    setIncomingCall(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: localVideoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: remoteVideoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCall,\n      disabled: !isPeerConnectionReady,\n      children: \"Start Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Incoming Call...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: answerCall,\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: declineCall,\n        children: \"Decline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoChat, \"5SKwyekRF4Q55Hw1qPX/o5Km0cM=\");\n_c = VideoChat;\nexport default VideoChat;\nvar _c;\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","VideoChat","_s","localVideoRef","remoteVideoRef","signalingServer","remoteUserId","setRemoteUserId","isPeerConnectionReady","setIsPeerConnectionReady","peerConnection","setPeerConnection","incomingCall","setIncomingCall","caller","setCaller","callerSignal","setCallerSignal","iceCandidates","setIceCandidates","console","log","pc","RTCPeerConnection","iceServers","urls","current","on","message","offer","source","id","forEach","candidate","emit","target","navigator","mediaDevices","getUserMedia","video","audio","then","stream","srcObject","getTracks","track","addTrack","onicecandidate","event","prevState","ontrack","streams","catch","error","startCall","createOffer","setLocalDescription","type","answerCall","setRemoteDescription","RTCSessionDescription","sdp","createAnswer","answer","declineCall","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/WebD/mern/chat/frontend/src/Pages/VideoCall/VideoCall.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst VideoChat = () => {\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const signalingServer = useRef(null);\n  const [remoteUserId, setRemoteUserId] = useState(null);\n  const [isPeerConnectionReady, setIsPeerConnectionReady] = useState(false);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [caller, setCaller] = useState(null);\n  const [callerSignal, setCallerSignal] = useState(null);\n  const [iceCandidates, setIceCandidates] = useState([]);\n\n  useEffect(() => {\n    console.log('Incoming call state: ', incomingCall);\n  }, [incomingCall]);\n\n  useEffect(() => {\n    const pc = new RTCPeerConnection({\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n    });\n  \n    setPeerConnection(pc);\n  }, []);\n\n  useEffect(() => {\n    if (peerConnection) {\n      signalingServer.current = io('http://localhost:7500');\n  \n      signalingServer.current.on('connect', () => {\n        console.log('Connected to signaling server');\n      });\n  \n      signalingServer.current.on('video-offer', async (message) => {\n        console.log('Received video-offer', message);\n        if (!message.offer) {\n          console.log('No offer in video-offer message');\n          return;\n        }\n        console.log('Setting incoming call, caller, and caller signal');\n        setIncomingCall(true);\n        setCaller(message.source);\n        setCallerSignal(message.offer);\n      });\n      \n\n    signalingServer.current.on('user-connected', (id) => {\n        console.log('User connected', id);\n        setRemoteUserId(id);\n      \n        // Send the stored ICE candidates to the remote user\n        iceCandidates.forEach(candidate => {\n          signalingServer.current.emit('new-ice-candidate', {\n            candidate: candidate,\n            target: id\n          });\n        });\n      });      \n\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n    .then(stream => {\n      localVideoRef.current.srcObject = stream;\n\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n\n      peerConnection.onicecandidate = event => {\n        if (remoteUserId) {\n          console.log('ICE candidate', remoteUserId)\n          signalingServer.current.emit('new-ice-candidate', {\n            candidate: event.candidate,\n            target: remoteUserId\n          });\n        } else {\n          console.log('ICE candidate generated before user connected');\n          setIceCandidates(prevState => [...prevState, event.candidate]);\n        }\n      };\n\n        peerConnection.ontrack = event => {\n          remoteVideoRef.current.srcObject = event.streams[0];\n        };\n\n        setIsPeerConnectionReady(true);\n    }).catch(error => {\n        console.error(\"Error accessing media devices.\", error);\n      });\n  }\n}, [peerConnection]);\n\nconst startCall = async () => {\n    if (!peerConnection) {\n      console.log('Peer connection is not established yet');\n      return;\n    }\n\n    const offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n\n    console.log('Emitting offer to', remoteUserId);\n    signalingServer.current.emit('offer', {\n      type: 'video-offer',\n      target: remoteUserId,\n      offer: offer\n    });\n    console.log('Emitted offer');\n  };\n\n  const answerCall = async () => {\n    console.log('Answering call with caller signal', callerSignal);\n    if (!callerSignal) {\n      console.log('Caller signal is null');\n      return;\n    }\n\n    setIncomingCall(false);\n    await peerConnection.setRemoteDescription(new RTCSessionDescription(callerSignal));\n    const sdp = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(sdp);\n    signalingServer.current.emit('answer', {\n      type: 'video-answer',\n      target: caller,\n      answer: sdp\n    });\n  };\n  \n\n  const declineCall = () => {\n    setIncomingCall(true);\n  };\n\n  return (\n    <div>\n      <video ref={localVideoRef} autoPlay muted />\n      <video ref={remoteVideoRef} autoPlay />\n      <button onClick={startCall} disabled={!isPeerConnectionReady}>Start Call</button>\n      {/* {incomingCall && ( */}\n        <div>\n          <h1>Incoming Call...</h1>\n          <button onClick={answerCall}>Answer</button>\n          <button onClick={declineCall}>Decline</button>\n        </div>\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default VideoChat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}